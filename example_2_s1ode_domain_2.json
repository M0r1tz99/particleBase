{
    "phenoma": {
        "phenomenon_1 / Point mass kinematic under influence of gravity and drag force based on distance based drag discount": {
            "general_info": {
                "general_solving_approach": "S1ode - Python implementation of Newton's second law in 3D in form of a coupled system of six first-order ordinary differential equations",
                "Other Specifications": null
            },
            "sub_phenomenon_1 / Point mass kinematic under gravity": {
                "general_info": {
                    "general_solving_approach": "S1ode - Python implementation of Newton's second law"
                }
            },
            "sub_phenomenon_2 / Particle drag force": {
                "general_info": {
                    "general_solving_approach": "Drag coefficient formulation by Clift et al.",
                    "Projection method for particle area": "Custom Python implementation of an average consideration based on the theorem of Cauchy (Cauchy\u2019s surface formula)",
                    "comment": "Drag force calculation based on constant air velocity field. Can be turned of. It would make sense to implement a static rotational air velocity field arround spinners to mimic air flow and ignore drag calculation otherwise."
                }
            },
            "sub_phenomenon_3 / Distance based drag discount": {
                "general_info": {
                    "General Solving Approach": "Introduction of a drag discount factor that increases with decreasing distance from the tailboard within an interval of 0 and 1",
                    "Other Specifications": "Default start discount: 35% (that means particles see only 65% of the 'normal' drag force magnitude, and after a default distance of 5 m or more they see the normal 100% according to Clift et al.",
                    "Comment": "Following concept suggestion of Diploma thesis, a spatially discretized drag discount model should be considered"
                }
            },
            "sub_phenomenon_4 / Wind": {
                "general_info": {
                    "General Solving Approach": "Constant velocity field taken into account for particle slip velocity for calculation of particle drag forces",
                    "Other Specifications": null
                }
            }
        }
    },
    "phases": {
        "lagrangian_phases": {
            "lagrangian_phase_1 / Capsular chopped wheat straw": {
                "general_particle_data": {
                    "rho_p": 150
                },
                "bodies": {
                    "bodie_1 / Capsular": {
                        "geometrical_definition": {
                            "type": {
                                "radius": 0.0018,
                                "height": {
                                    "0.0": 0.0,
                                    "0.004": 4.9,
                                    "0.00935": 12.7,
                                    "0.002365": 42.9,
                                    "0.003488": 76.4,
                                    "0.006144": 97.5,
                                    "0.009974": 100.0
                                }
                            }
                        },
                        "specific_physic_constants": {
                            "youngs_modulus": 1,
                            "poisson_coefficient": 0.45
                        }
                    }
                },
                "body_configuration": null,
                "lagrangian_injectors": {
                    "lagrangian_injector_1 / Chopper Inlet": {
                        "angular_velocity": {
                            "Condition": "Angular velocity",
                            "Method": "Normally distributed",
                            "Values": {
                                "Minimum": [
                                    -125.0,
                                    -125.0,
                                    -125.0
                                ],
                                "Maximum": [
                                    125.0,
                                    125.0,
                                    125.0
                                ],
                                "Mean": [
                                    0.0,
                                    0.0,
                                    0.0
                                ],
                                "Standard deviation": [
                                    125.0,
                                    125.0,
                                    125.0
                                ]
                            }
                        },
                        "particle_orientation": {
                            "Condition": "Particle orientation",
                            "Method": "Uniformly distributed",
                            "Values": {
                                "Minimum": [
                                    0.0,
                                    0.0,
                                    0.0
                                ],
                                "Maximum": [
                                    6.28,
                                    6.28,
                                    6.28
                                ]
                            }
                        },
                        "velocity": {
                            "Condition": "Velocity",
                            "Method": "Normally distributed",
                            "Values": {
                                "Minimum": [
                                    10.0,
                                    0.0,
                                    0.0
                                ],
                                "Maximum": [
                                    40.0,
                                    0.0,
                                    0.0
                                ],
                                "Mean": [
                                    30.0,
                                    0.0,
                                    0.0
                                ],
                                "Standard deviation": [
                                    10.0,
                                    0.0,
                                    0.0
                                ]
                            }
                        }
                    }
                }
            }
        },
        "wall_phases": {
            "wall_phase_1 / Sheet metal steel": {
                "specific_physic_constants": {
                    "youngs_modulus": null,
                    "poisson_coefficient": null
                }
            }
        },
        "eulerian_phases": {
            "eulerian_phase_1 / Air": {
                "rho_f": 1.18415,
                "mu_f": 1.85508e-05,
                "p_f": 101325
            }
        },
        "phase_interactions": null
    },
    "temporal_discretization": {
        "Integration": "Explicit Runge-Kutta method of order 5(4) family as published in Dormand, J. R. ; Prince, P. J.: A family of embedded Runge-Kutta formulae. In: Journal of Computational and Applied Mathematics 6 (1980), Nr. 1, 19\u201326. http://dx.doi.org/10.1016/0771-050X(80)90013-3. \u2013 DOI 10.1016/0771\u2013050X(80)90013\u20133. \u2013ISSN 0377\u20130427",
        "Physical time step": "0.001"
    },
    "domain_motions": null,
    "solver": {
        "Solver type": "Python SciPy module implementing a FORTRAN based code of Explicit Runge-Kutta method of order 5(4) family as published in Dormand, J. R. ; Prince, P. J.: A family of embedded Runge-Kutta formulae. In: Journal of Computational and Applied Mathematics 6 (1980), Nr. 1, 19\u201326. http://dx.doi.org/10.1016/0771-050X(80)90013-3. \u2013 DOI 10.1016/0771\u2013050X(80)90013\u20133. \u2013ISSN 0377\u20130427",
        "Solver device": "CPU (singlethreading)"
    }
}